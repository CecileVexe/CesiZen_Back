name: üöÄ Build and deploy
run-name: ${{ github.actor }} is deploying with GitHub Actions üöÄ
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üöÄ Lancement des √©tapes de construction"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üöÄ Le code du d√©p√¥t a √©t√© clon√© sur le serveur d'ex√©cution."
      - run: npm clean-install
      - run: npm run build
      - name: Save cache (node_modules)
        uses: actions/cache/save@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - run : echo "üèÅ √âtapes de construction termin√©es"

  build-push-docker :
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4 #recup√©rer le code
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Build and push docker
      uses: docker/build-push-action@v6
      with: 
        context : .
        push: true
        target: cesizen-backend #nom de l'image concern√© dans le Dockerfile
        tags: ghcr.io/cecilevexe/cesizen_back/cesizen_back:${{github.ref_name}} #avec le tag du nom de la branche sur laquelle on a push
  
  # # deploy-docker:
  # #   runs-on: ubuntu-latest
  # #   needs:
  # #     - build-push-docker
  # #   steps:
  # #     - uses: appleboy/ssh-action@v1
  # #       with:
  # #         host: ${{ secrets.EC2_HOST }}
  # #         username: ${{ secrets.EC2_USER }}
  # #         key: ${{ secrets.EC2_PRIVATE_KEY }}
  # #         script: |
  # #           cd prod
  # #           sudo docker compose -f docker-compose.prod.yml pull
  # #           sudo docker compose -f docker-compose.prod.yml up -d

  deploy-docker-on-recette:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'recette')
    environment:
      name: recette
      url: http://ec2-23-22-102-8.compute-1.amazonaws.com/
    needs:
      - build-push-docker
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd cesiZen/recette
            sudo docker compose -f docker-compose.global.yml pull
            sudo docker compose -f docker-compose.global.yml up -d
  
  # deploy-docker-on-test:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref_name == 'test' }}
  #   environment:
  #     name: test
  #     url: http://ec2-23-22-102-8.compute-1.amazonaws.com/
  #   needs:
  #     - build-push-docker
  #   steps:
  #     - uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         key: ${{ secrets.EC2_PRIVATE_KEY }}
  #         script: |
  #           mkdir test -p
  #           cd test
  #           sudo docker compose -f docker-compose.test.yml pull
  #           sudo docker compose -f docker-compose.test.yml up -d



